{"ast":null,"code":"import React from\"react\";import{useLocation}from\"react-router-dom\";// Hooks\nimport{useActions,useTypedSelector}from\"../hooks\";// Components\nimport Button from\"./Button\";// Utils\nimport{formatTokenBalance}from\"../utils/strings\";// Assets\nimport Seed from\"../assets/icons/seed.png\";import kUSD from\"../assets/icons/kUSD.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Header=function Header(_ref){var setSidebarOpen=_ref.setSidebarOpen;var _useActions=useActions(),connectWallet=_useActions.connectWallet;var _useTypedSelector=useTypedSelector(function(state){return state.wallet;}),isConnected=_useTypedSelector.isConnected,tokenBalances=_useTypedSelector.tokenBalances;// TODO: Remove once landing page is separated out to another repo\nvar path=useLocation().pathname;if(path===\"/\")return/*#__PURE__*/_jsx(React.Fragment,{});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row justify-between font-secondary font-medium mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(){return setSidebarOpen(true);},className:\"bi bi-list text-4xl lg:opacity-0\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-lg hidden px-3 py-2 bg-white md:flex items-center mr-4\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"w-7 mr-4\",alt:\"kUSD\",src:kUSD}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:formatTokenBalance(tokenBalances.kUSD,18)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-lg hidden px-3 py-2 bg-white md:flex items-center mr-4\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"w-7 mr-4\",alt:\"seed\",src:Seed}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:formatTokenBalance(tokenBalances.SEED,18)})]}),!isConnected?/*#__PURE__*/_jsx(Button,{text:\"Connect Wallet\",icon:\"wallet\",background:\"bg-white\",onClick:function onClick(){return connectWallet(true);}}):/*#__PURE__*/_jsx(Button,{text:\"Connected\",icon:\"check-circle-fill\",iconColor:\"text-green-600\",background:\"bg-white\",onClick:function onClick(){return connectWallet(true);}})]})]});};export default Header;","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/components/Header.tsx"],"names":["React","useLocation","useActions","useTypedSelector","Button","formatTokenBalance","Seed","kUSD","Header","setSidebarOpen","connectWallet","state","wallet","isConnected","tokenBalances","path","pathname","SEED"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA;AACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,UAA7C,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA;AACA,OAASC,kBAAT,KAAmC,kBAAnC,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,C,wFAMA,GAAMC,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,MAAwB,IAArBC,CAAAA,cAAqB,MAArBA,cAAqB,CAC5D,gBAA0BP,UAAU,EAApC,CAAQQ,aAAR,aAAQA,aAAR,CAEA,sBAAuCP,gBAAgB,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAjB,EAAD,CAAvD,CAAQC,WAAR,mBAAQA,WAAR,CAAqBC,aAArB,mBAAqBA,aAArB,CAEA;AACA,GAAMC,CAAAA,IAAI,CAAGd,WAAW,GAAGe,QAA3B,CACA,GAAID,IAAI,GAAK,GAAb,CAAkB,mBAAO,KAAC,KAAD,CAAO,QAAP,IAAP,CAElB,mBACE,aAAK,SAAS,CAAC,+DAAf,wBAEE,kCACE,UAAG,OAAO,CAAE,yBAAMN,CAAAA,cAAc,CAAC,IAAD,CAApB,EAAZ,CAAwC,SAAS,CAAC,kCAAlD,EADF,EAFF,cAKE,aAAK,SAAS,CAAC,mBAAf,wBAEE,aAAK,SAAS,CAAC,gEAAf,wBACE,YAAK,SAAS,CAAC,UAAf,CAA0B,GAAG,CAAC,MAA9B,CAAqC,GAAG,CAAEF,IAA1C,EADF,cAEE,aAAM,SAAS,CAAC,SAAhB,UAA2BF,kBAAkB,CAACS,aAAa,CAACP,IAAf,CAAqB,EAArB,CAA7C,EAFF,GAFF,cAME,aAAK,SAAS,CAAC,gEAAf,wBACE,YAAK,SAAS,CAAC,UAAf,CAA0B,GAAG,CAAC,MAA9B,CAAqC,GAAG,CAAED,IAA1C,EADF,cAEE,aAAM,SAAS,CAAC,SAAhB,UAA2BD,kBAAkB,CAACS,aAAa,CAACG,IAAf,CAAqB,EAArB,CAA7C,EAFF,GANF,CAUG,CAACJ,WAAD,cACC,KAAC,MAAD,EAAQ,IAAI,CAAC,gBAAb,CAA8B,IAAI,CAAC,QAAnC,CAA4C,UAAU,CAAC,UAAvD,CAAkE,OAAO,CAAE,yBAAMH,CAAAA,aAAa,CAAC,IAAD,CAAnB,EAA3E,EADD,cAGC,KAAC,MAAD,EACE,IAAI,CAAC,WADP,CAEE,IAAI,CAAC,mBAFP,CAGE,SAAS,CAAC,gBAHZ,CAIE,UAAU,CAAC,UAJb,CAKE,OAAO,CAAE,yBAAMA,CAAAA,aAAa,CAAC,IAAD,CAAnB,EALX,EAbJ,GALF,GADF,CA8BD,CAvCD,CAyCA,cAAeF,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// Hooks\nimport { useActions, useTypedSelector } from \"../hooks\";\n\n// Components\nimport Button from \"./Button\";\n\n// Utils\nimport { formatTokenBalance } from \"../utils/strings\";\n\n// Assets\nimport Seed from \"../assets/icons/seed.png\";\nimport kUSD from \"../assets/icons/kUSD.png\";\n\ninterface HeaderProps {\n  setSidebarOpen: (val: boolean) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ setSidebarOpen }) => {\n  const { connectWallet } = useActions();\n\n  const { isConnected, tokenBalances } = useTypedSelector((state) => state.wallet);\n\n  // TODO: Remove once landing page is separated out to another repo\n  const path = useLocation().pathname;\n  if (path === \"/\") return <React.Fragment></React.Fragment>;\n\n  return (\n    <div className=\"flex flex-row justify-between font-secondary font-medium mb-4\">\n      {/* Sidebar trigger btn */}\n      <div>\n        <i onClick={() => setSidebarOpen(true)} className=\"bi bi-list text-4xl lg:opacity-0\"></i>\n      </div>\n      <div className=\"flex items-center\">\n        {/* balances and wallet*/}\n        <div className=\"rounded-lg hidden px-3 py-2 bg-white md:flex items-center mr-4\">\n          <img className=\"w-7 mr-4\" alt=\"kUSD\" src={kUSD} />\n          <span className=\"text-lg\">{formatTokenBalance(tokenBalances.kUSD, 18)}</span>\n        </div>\n        <div className=\"rounded-lg hidden px-3 py-2 bg-white md:flex items-center mr-4\">\n          <img className=\"w-7 mr-4\" alt=\"seed\" src={Seed} />\n          <span className=\"text-lg\">{formatTokenBalance(tokenBalances.SEED, 18)}</span>\n        </div>\n        {!isConnected ? (\n          <Button text=\"Connect Wallet\" icon=\"wallet\" background=\"bg-white\" onClick={() => connectWallet(true)} />\n        ) : (\n          <Button\n            text=\"Connected\"\n            icon=\"check-circle-fill\"\n            iconColor=\"text-green-600\"\n            background=\"bg-white\"\n            onClick={() => connectWallet(true)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}