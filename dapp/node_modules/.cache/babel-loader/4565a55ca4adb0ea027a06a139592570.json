{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";// Actions and types\nimport*as t from\"../types\";import{BoxStage}from\"../actions/farm\";// Rootstate\n// Utils\nimport{indexerAPI,waterPeriod}from\"../../utils/global\";export var loadBoxes=function loadBoxes(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var accountPkh,_res,boxes,_iterator,_step,box;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:accountPkh=getState().wallet.accountPkh;_context.prev=1;_context.next=4;return axios.get(\"\".concat(indexerAPI,\"/boxes?address=\").concat(accountPkh));case 4:_res=_context.sent;boxes=[];// Iterate and assign stages\n_iterator=_createForOfIteratorHelper(_res.data);try{for(_iterator.s();!(_step=_iterator.n()).done;){box=_step.value;boxes.push(_objectSpread({key:box.key},findStage(parseInt(box.timesWatered),box.lastWatered)));}}catch(err){_iterator.e(err);}finally{_iterator.f();}dispatch({type:t.FarmActionTypes.LOAD_BOXES,payload:boxes});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};var findStage=function findStage(timesWatered,lastWatered){var notWateredIn=Date.now()-new Date(lastWatered).getTime();if(notWateredIn>2*waterPeriod&&timesWatered!==5)return{stage:BoxStage.DEAD,waterBy:0,needsWater:false};else{return{waterBy:2*waterPeriod-notWateredIn,needsWater:notWateredIn>waterPeriod,stage:notWateredIn>waterPeriod?BoxStage[\"STAGE_\".concat(timesWatered+1)]:BoxStage[\"STAGE_\".concat(timesWatered)]};}};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/action-creators/farm.ts"],"names":["axios","t","BoxStage","indexerAPI","waterPeriod","loadBoxes","dispatch","getState","accountPkh","wallet","get","_res","boxes","data","box","push","key","findStage","parseInt","timesWatered","lastWatered","type","FarmActionTypes","LOAD_BOXES","payload","console","error","notWateredIn","Date","now","getTime","stage","DEAD","waterBy","needsWater"],"mappings":"glBACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,UAAnB,CAEA,OAASC,QAAT,KAA8B,iBAA9B,CAEA;AAGA;AACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,oBAAxC,CAEA,MAAO,IAAMC,CAAAA,SAAS,CACpB,QADWA,CAAAA,SACX,kGACA,iBAAOC,QAAP,CAAuCC,QAAvC,gKACUC,UADV,CACyBD,QAAQ,GAAGE,MADpC,CACUD,UADV,uCAKuBR,CAAAA,KAAK,CAACU,GAAN,WAAaP,UAAb,2BAAyCK,UAAzC,EALvB,QAKUG,IALV,eAMUC,KANV,CAMyB,EANzB,CAOI;AAPJ,qCAQsBD,IAAI,CAACE,IAR3B,MAQI,+CAA6B,CAAlBC,GAAkB,aAC3BF,KAAK,CAACG,IAAN,gBACEC,GAAG,CAAEF,GAAG,CAACE,GADX,EAEKC,SAAS,CAACC,QAAQ,CAACJ,GAAG,CAACK,YAAL,CAAT,CAA6BL,GAAG,CAACM,WAAjC,CAFd,GAID,CAbL,qDAeId,QAAQ,CAAC,CACPe,IAAI,CAAEpB,CAAC,CAACqB,eAAF,CAAkBC,UADjB,CAEPC,OAAO,CAAEZ,KAFF,CAAD,CAAR,CAfJ,iFAoBIa,OAAO,CAACC,KAAR,cApBJ,qEADA,oEADK,CA0BP,GAAMT,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAChBE,YADgB,CAEhBC,WAFgB,CAG8C,CAC9D,GAAMO,CAAAA,YAAY,CAAGC,IAAI,CAACC,GAAL,GAAa,GAAID,CAAAA,IAAJ,CAASR,WAAT,EAAsBU,OAAtB,EAAlC,CACA,GAAIH,YAAY,CAAG,EAAIvB,WAAnB,EAAkCe,YAAY,GAAK,CAAvD,CACE,MAAO,CAAEY,KAAK,CAAE7B,QAAQ,CAAC8B,IAAlB,CAAwBC,OAAO,CAAE,CAAjC,CAAoCC,UAAU,CAAE,KAAhD,CAAP,CADF,IAEK,CACH,MAAO,CACLD,OAAO,CAAE,EAAI7B,WAAJ,CAAkBuB,YADtB,CAELO,UAAU,CAAEP,YAAY,CAAGvB,WAFtB,CAGL2B,KAAK,CACHJ,YAAY,CAAGvB,WAAf,CACIF,QAAQ,iBAAUiB,YAAY,CAAG,CAAzB,EADZ,CAEIjB,QAAQ,iBAAUiB,YAAV,EANT,CAAP,CAQD,CACF,CAjBD","sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from \"axios\";\n\n// Actions and types\nimport * as t from \"../types\";\nimport { FarmAction } from \"../actions\";\nimport { BoxStage, Box } from \"../actions/farm\";\n\n// Rootstate\nimport { RootState } from \"../reducers\";\n\n// Utils\nimport { indexerAPI, waterPeriod } from \"../../utils/global\";\n\nexport const loadBoxes =\n  () =>\n  async (dispatch: Dispatch<FarmAction>, getState: () => RootState): Promise<void> => {\n    const { accountPkh } = getState().wallet;\n\n    try {\n      // Retrieve boxes\n      const _res = await axios.get(`${indexerAPI}/boxes?address=${accountPkh}`);\n      const boxes: Box[] = [];\n      // Iterate and assign stages\n      for (const box of _res.data) {\n        boxes.push({\n          key: box.key,\n          ...findStage(parseInt(box.timesWatered), box.lastWatered),\n        });\n      }\n\n      dispatch({\n        type: t.FarmActionTypes.LOAD_BOXES,\n        payload: boxes,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\nconst findStage = (\n  timesWatered: number,\n  lastWatered: string\n): { stage: BoxStage; needsWater: boolean; waterBy: number } => {\n  const notWateredIn = Date.now() - new Date(lastWatered).getTime();\n  if (notWateredIn > 2 * waterPeriod && timesWatered !== 5)\n    return { stage: BoxStage.DEAD, waterBy: 0, needsWater: false };\n  else {\n    return {\n      waterBy: 2 * waterPeriod - notWateredIn,\n      needsWater: notWateredIn > waterPeriod,\n      stage:\n        notWateredIn > waterPeriod\n          ? BoxStage[`STAGE_${timesWatered + 1}` as keyof typeof BoxStage]\n          : BoxStage[`STAGE_${timesWatered}` as keyof typeof BoxStage],\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}