{"ast":null,"code":"export let BoxStage;\n\n(function (BoxStage) {\n  BoxStage[\"STAGE_1\"] = \"STAGE_1\";\n  BoxStage[\"STAGE_2\"] = \"STAGE_2\";\n  BoxStage[\"STAGE_3\"] = \"STAGE_3\";\n  BoxStage[\"STAGE_4\"] = \"STAGE_4\";\n  BoxStage[\"STAGE_5\"] = \"STAGE_5\";\n  BoxStage[\"STAGE_6\"] = \"STAGE_6\";\n  BoxStage[\"DEAD\"] = \"DEAD\";\n})(BoxStage || (BoxStage = {}));","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/actions/farm.ts"],"names":["BoxStage"],"mappings":"AAEA,WAAYA,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q","sourcesContent":["import * as t from \"../types\";\n\nexport enum BoxStage {\n  STAGE_1 = \"STAGE_1\",\n  STAGE_2 = \"STAGE_2\",\n  STAGE_3 = \"STAGE_3\",\n  STAGE_4 = \"STAGE_4\",\n  STAGE_5 = \"STAGE_5\",\n  STAGE_6 = \"STAGE_6\",\n  DEAD = \"DEAD\",\n}\n\nexport interface Box {\n  key: number;\n  waterBy: number;\n  needsWater: boolean;\n  stage: BoxStage;\n}\n\nexport interface LoadBoxesAction {\n  type: t.FarmActionTypes.LOAD_BOXES;\n  payload: Box[];\n}\n"]},"metadata":{},"sourceType":"module"}