{"ast":null,"code":"import axios from \"axios\"; // Utils\n\nimport { apiURL } from \"../utils/global\";\nexport const getFA12Balance = async (tokenAddress, accountPkh) => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n\n    const bigMap = _res.data.balances || _res.data.ledger;\n\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${accountPkh}`);\n\n    if (__res.data) {\n      return __res.data.value.balance;\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getFA2Balance = async (tokenAddress, accountPkh, tokenId) => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n\n    const bigMap = _res.data.ledger;\n    const key = {\n      nat: tokenId,\n      address: accountPkh\n    };\n\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${JSON.stringify(key)}`);\n\n    if (__res.data) {\n      return __res.data.value;\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getFA12TotalSupply = async tokenAddress => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n\n    return _res.data.totalSupply;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getFA12Approval = async (tokenAddress, accountPkh, spender) => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n\n    const bigMap = _res.data.balances || _res.data.ledger;\n\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${accountPkh}`);\n\n    if (__res.data && __res.data.value.approvals[spender]) {\n      return __res.data.value.approvals[spender];\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getFA2TotalSupply = async (tokenAddress, tokenId) => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n\n    const bigMap = _res.data.total_supply;\n\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${tokenId}`);\n\n    if (__res.data) {\n      return __res.data.value;\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/api/tokens.ts"],"names":["axios","apiURL","getFA12Balance","tokenAddress","accountPkh","_res","get","bigMap","data","balances","ledger","__res","value","balance","err","getFA2Balance","tokenId","key","nat","address","JSON","stringify","getFA12TotalSupply","totalSupply","getFA12Approval","spender","approvals","getFA2TotalSupply","total_supply"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// Utils\nimport { apiURL } from \"../utils/global\";\n\nexport const getFA12Balance = async (tokenAddress: string, accountPkh: string): Promise<string> => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n    const bigMap = _res.data.balances || _res.data.ledger;\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${accountPkh}`);\n    if (__res.data) {\n      return __res.data.value.balance;\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getFA2Balance = async (tokenAddress: string, accountPkh: string, tokenId: string): Promise<string> => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n    const bigMap = _res.data.ledger;\n    const key = { nat: tokenId, address: accountPkh };\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${JSON.stringify(key)}`);\n    if (__res.data) {\n      return __res.data.value;\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getFA12TotalSupply = async (tokenAddress: string): Promise<string> => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n    return _res.data.totalSupply;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getFA12Approval = async (tokenAddress: string, accountPkh: string, spender: string): Promise<string> => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n    const bigMap = _res.data.balances || _res.data.ledger;\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${accountPkh}`);\n    if (__res.data && __res.data.value.approvals[spender]) {\n      return __res.data.value.approvals[spender];\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getFA2TotalSupply = async (tokenAddress: string, tokenId: string): Promise<string> => {\n  try {\n    const _res = await axios.get(`${apiURL}/contracts/${tokenAddress}/storage`);\n    const bigMap = _res.data.total_supply;\n    const __res = await axios.get(`${apiURL}/bigmaps/${bigMap}/keys/${tokenId}`);\n    if (__res.data) {\n      return __res.data.value;\n    } else {\n      return \"0\";\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}