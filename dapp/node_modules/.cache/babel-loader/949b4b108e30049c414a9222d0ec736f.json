{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{OpKind}from\"@taquito/taquito\";import BigNumber from\"bignumber.js\";// Utils\nimport{kUSDAddress,boxPoolAddress}from\"../utils/global\";import{multiply}from\"../utils/math\";// API\nimport{getFA12Approval}from\"../api\";// Redux store\nimport{store}from\"..\";export var lockTokens=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){var accountPkh,_store$getState$contr,kUSDContract,boxPoolContract,tezos,opList,valueBN,hasApproved,approvalAmount,batch;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:accountPkh=store.getState().wallet.accountPkh;_store$getState$contr=store.getState().contract,kUSDContract=_store$getState$contr.kUSDContract,boxPoolContract=_store$getState$contr.boxPoolContract,tezos=_store$getState$contr.tezos;if(!(!kUSDContract||!boxPoolContract||!tezos)){_context.next=4;break;}return _context.abrupt(\"return\");case 4:opList=[];valueBN=multiply(value,Math.pow(10,18));hasApproved=false;_context.prev=7;_context.next=10;return getFA12Approval(kUSDAddress,accountPkh,boxPoolAddress);case 10:approvalAmount=_context.sent;if(new BigNumber(approvalAmount).isLessThan(valueBN)){opList.push(_objectSpread({kind:OpKind.TRANSACTION},kUSDContract.methods.approve(boxPoolAddress,valueBN.toString()).toTransferParams()));hasApproved=true;}// Main operation\nopList.push(_objectSpread({kind:OpKind.TRANSACTION},boxPoolContract.methods.lock_tokens(valueBN.toString()).toTransferParams()));// Revoke approval\nif(hasApproved){opList.push(_objectSpread({kind:OpKind.TRANSACTION},kUSDContract.methods.approve(boxPoolAddress,0).toTransferParams()));}// Return operation instance\n_context.next=16;return tezos.wallet.batch(opList);case 16:batch=_context.sent;return _context.abrupt(\"return\",batch);case 20:_context.prev=20;_context.t0=_context[\"catch\"](7);throw _context.t0;case 23:case\"end\":return _context.stop();}}},_callee,null,[[7,20]]);}));return function lockTokens(_x){return _ref.apply(this,arguments);};}();export var unlockTokens=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value){var boxPoolContract,op;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:boxPoolContract=store.getState().contract.boxPoolContract;if(boxPoolContract){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:_context2.prev=3;_context2.next=6;return boxPoolContract.methods.unlock_tokens(multiply(value,Math.pow(10,18)));case 6:op=_context2.sent;return _context2.abrupt(\"return\",op);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](3);throw _context2.t0;case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[3,10]]);}));return function unlockTokens(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/operations/pool.ts"],"names":["OpKind","BigNumber","kUSDAddress","boxPoolAddress","multiply","getFA12Approval","store","lockTokens","value","accountPkh","getState","wallet","contract","kUSDContract","boxPoolContract","tezos","opList","valueBN","hasApproved","approvalAmount","isLessThan","push","kind","TRANSACTION","methods","approve","toString","toTransferParams","lock_tokens","batch","unlockTokens","unlock_tokens","op"],"mappings":"yaAAA,OAA+BA,MAA/B,KAA2F,kBAA3F,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA;AACA,OAASC,WAAT,CAAsBC,cAAtB,KAA4C,iBAA5C,CACA,OAASC,QAAT,KAAyB,eAAzB,CAEA;AACA,OAASC,eAAT,KAAgC,QAAhC,CAEA;AACA,OAASC,KAAT,KAAsB,IAAtB,CAEA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBAAOC,KAAP,0OAChBC,UADgB,CACDH,KAAK,CAACI,QAAN,GAAiBC,MADhB,CAChBF,UADgB,uBAEyBH,KAAK,CAACI,QAAN,GAAiBE,QAF1C,CAEhBC,YAFgB,uBAEhBA,YAFgB,CAEFC,eAFE,uBAEFA,eAFE,CAEeC,KAFf,uBAEeA,KAFf,MAIpB,CAACF,YAAD,EAAiB,CAACC,eAAlB,EAAqC,CAACC,KAJlB,kEAMlBC,MANkB,CAMe,EANf,CAQlBC,OARkB,CAQRb,QAAQ,CAACI,KAAD,UAAQ,EAAR,CAAc,EAAd,EARA,CAUpBU,WAVoB,CAUN,KAVM,wCAcOb,CAAAA,eAAe,CAACH,WAAD,CAAcO,UAAd,CAA0BN,cAA1B,CAdtB,SAchBgB,cAdgB,eAetB,GAAI,GAAIlB,CAAAA,SAAJ,CAAckB,cAAd,EAA8BC,UAA9B,CAAyCH,OAAzC,CAAJ,CAAuD,CACrDD,MAAM,CAACK,IAAP,gBACEC,IAAI,CAAEtB,MAAM,CAACuB,WADf,EAEKV,YAAY,CAACW,OAAb,CAAqBC,OAArB,CAA6BtB,cAA7B,CAA6Cc,OAAO,CAACS,QAAR,EAA7C,EAAiEC,gBAAjE,EAFL,GAIAT,WAAW,CAAG,IAAd,CACD,CAED;AACAF,MAAM,CAACK,IAAP,gBACEC,IAAI,CAAEtB,MAAM,CAACuB,WADf,EAEKT,eAAe,CAACU,OAAhB,CAAwBI,WAAxB,CAAoCX,OAAO,CAACS,QAAR,EAApC,EAAwDC,gBAAxD,EAFL,GAKA;AACA,GAAIT,WAAJ,CAAiB,CACfF,MAAM,CAACK,IAAP,gBACEC,IAAI,CAAEtB,MAAM,CAACuB,WADf,EAEKV,YAAY,CAACW,OAAb,CAAqBC,OAArB,CAA6BtB,cAA7B,CAA6C,CAA7C,EAAgDwB,gBAAhD,EAFL,GAID,CAED;AArCsB,uBAsCFZ,CAAAA,KAAK,CAACJ,MAAN,CAAakB,KAAb,CAAmBb,MAAnB,CAtCE,SAsChBa,KAtCgB,+CAuCfA,KAvCe,mJAAH,kBAAVtB,CAAAA,UAAU,4CAAhB,CA6CP,MAAO,IAAMuB,CAAAA,YAAY,2FAAG,kBAAOtB,KAAP,6IAClBM,eADkB,CACER,KAAK,CAACI,QAAN,GAAiBE,QADnB,CAClBE,eADkB,IAGrBA,eAHqB,2GAMPA,CAAAA,eAAe,CAACU,OAAhB,CAAwBO,aAAxB,CAAsC3B,QAAQ,CAACI,KAAD,UAAQ,EAAR,CAAc,EAAd,EAA9C,CANO,QAMlBwB,EANkB,iDAOjBA,EAPiB,yJAAH,kBAAZF,CAAAA,YAAY,8CAAlB","sourcesContent":["import { WalletParamsWithKind, OpKind, WalletOperationBatch, ContractMethod, Wallet } from \"@taquito/taquito\";\nimport BigNumber from \"bignumber.js\";\n\n// Utils\nimport { kUSDAddress, boxPoolAddress } from \"../utils/global\";\nimport { multiply } from \"../utils/math\";\n\n// API\nimport { getFA12Approval } from \"../api\";\n\n// Redux store\nimport { store } from \"..\";\n\nexport const lockTokens = async (value: string): Promise<WalletOperationBatch | undefined> => {\n  const { accountPkh } = store.getState().wallet;\n  const { kUSDContract, boxPoolContract, tezos } = store.getState().contract;\n\n  if (!kUSDContract || !boxPoolContract || !tezos) return;\n\n  const opList: WalletParamsWithKind[] = [];\n\n  const valueBN = multiply(value, 10 ** 18);\n\n  let hasApproved = false;\n\n  try {\n    // Check for approval value\n    const approvalAmount = await getFA12Approval(kUSDAddress, accountPkh, boxPoolAddress);\n    if (new BigNumber(approvalAmount).isLessThan(valueBN)) {\n      opList.push({\n        kind: OpKind.TRANSACTION,\n        ...kUSDContract.methods.approve(boxPoolAddress, valueBN.toString()).toTransferParams(),\n      });\n      hasApproved = true;\n    }\n\n    // Main operation\n    opList.push({\n      kind: OpKind.TRANSACTION,\n      ...boxPoolContract.methods.lock_tokens(valueBN.toString()).toTransferParams(),\n    });\n\n    // Revoke approval\n    if (hasApproved) {\n      opList.push({\n        kind: OpKind.TRANSACTION,\n        ...kUSDContract.methods.approve(boxPoolAddress, 0).toTransferParams(),\n      });\n    }\n\n    // Return operation instance\n    const batch = await tezos.wallet.batch(opList);\n    return batch;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const unlockTokens = async (value: string): Promise<ContractMethod<Wallet> | undefined> => {\n  const { boxPoolContract } = store.getState().contract;\n\n  if (!boxPoolContract) return;\n\n  try {\n    const op = await boxPoolContract.methods.unlock_tokens(multiply(value, 10 ** 18));\n    return op;\n  } catch (err) {\n    throw err;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}