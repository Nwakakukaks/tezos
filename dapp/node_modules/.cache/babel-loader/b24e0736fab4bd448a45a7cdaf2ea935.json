{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{TezosToolkit}from\"@taquito/taquito\";import*as t from\"../types\";// Root state of the reducer\n// Utils\nimport{kUSDAddress,seedAddress,boxFruitAddress,boxPoolAddress,boxFarmAddress,kUSDFaucetAddress,rpcNode}from\"../../utils/global\";export var loadContracts=function loadContracts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var walletInstance,Tezos,kUSDContract,seedContract,boxFruitContract,boxPoolContract,boxFarmContract,kUSDFaucetContract;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:walletInstance=getState().wallet.walletInstance;Tezos=new TezosToolkit(rpcNode);Tezos.setWalletProvider(walletInstance);_context.prev=3;_context.next=6;return Tezos.wallet.at(kUSDAddress);case 6:kUSDContract=_context.sent;_context.next=9;return Tezos.wallet.at(seedAddress);case 9:seedContract=_context.sent;_context.next=12;return Tezos.wallet.at(boxFruitAddress);case 12:boxFruitContract=_context.sent;_context.next=15;return Tezos.wallet.at(boxPoolAddress);case 15:boxPoolContract=_context.sent;_context.next=18;return Tezos.wallet.at(boxFarmAddress);case 18:boxFarmContract=_context.sent;_context.next=21;return Tezos.wallet.at(kUSDFaucetAddress);case 21:kUSDFaucetContract=_context.sent;dispatch({type:t.ContractActionTypes.LOAD_CONTRACTS,payload:{tezos:Tezos,kUSDContract:kUSDContract,seedContract:seedContract,boxFruitContract:boxFruitContract,boxPoolContract:boxPoolContract,boxFarmContract:boxFarmContract,kUSDFaucetContract:kUSDFaucetContract}});_context.next=28;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 28:case\"end\":return _context.stop();}}},_callee,null,[[3,25]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/action-creators/contract.ts"],"names":["TezosToolkit","t","kUSDAddress","seedAddress","boxFruitAddress","boxPoolAddress","boxFarmAddress","kUSDFaucetAddress","rpcNode","loadContracts","dispatch","getState","walletInstance","wallet","Tezos","setWalletProvider","at","kUSDContract","seedContract","boxFruitContract","boxPoolContract","boxFarmContract","kUSDFaucetContract","type","ContractActionTypes","LOAD_CONTRACTS","payload","tezos","console","error"],"mappings":"2RACA,OAASA,YAAT,KAA6B,kBAA7B,CAKA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,UAAnB,CAEA;AAGA;AACA,OACEC,WADF,CAEEC,WAFF,CAGEC,eAHF,CAIEC,cAJF,CAKEC,cALF,CAMEC,iBANF,CAOEC,OAPF,KAQO,oBARP,CAUA,MAAO,IAAMC,CAAAA,aAAa,CACxB,QADWA,CAAAA,aACX,kGACA,iBAAOC,QAAP,CAA2CC,QAA3C,yOACQC,cADR,CACyBD,QAAQ,GAAGE,MAAX,CAAkBD,cAD3C,CAGQE,KAHR,CAGgB,GAAId,CAAAA,YAAJ,CAAiBQ,OAAjB,CAHhB,CAIEM,KAAK,CAACC,iBAAN,CAAwBH,cAAxB,EAJF,sCAO+BE,CAAAA,KAAK,CAACD,MAAN,CAAaG,EAAb,CAAgBd,WAAhB,CAP/B,QAOUe,YAPV,qCAQ+BH,CAAAA,KAAK,CAACD,MAAN,CAAaG,EAAb,CAAgBb,WAAhB,CAR/B,QAQUe,YARV,sCASmCJ,CAAAA,KAAK,CAACD,MAAN,CAAaG,EAAb,CAAgBZ,eAAhB,CATnC,SASUe,gBATV,sCAUkCL,CAAAA,KAAK,CAACD,MAAN,CAAaG,EAAb,CAAgBX,cAAhB,CAVlC,SAUUe,eAVV,sCAWkCN,CAAAA,KAAK,CAACD,MAAN,CAAaG,EAAb,CAAgBV,cAAhB,CAXlC,SAWUe,eAXV,sCAYqCP,CAAAA,KAAK,CAACD,MAAN,CAAaG,EAAb,CAAgBT,iBAAhB,CAZrC,SAYUe,kBAZV,eAcIZ,QAAQ,CAAC,CACPa,IAAI,CAAEtB,CAAC,CAACuB,mBAAF,CAAsBC,cADrB,CAEPC,OAAO,CAAE,CACPC,KAAK,CAAEb,KADA,CAEPG,YAAY,CAAZA,YAFO,CAGPC,YAAY,CAAZA,YAHO,CAIPC,gBAAgB,CAAhBA,gBAJO,CAKPC,eAAe,CAAfA,eALO,CAMPC,eAAe,CAAfA,eANO,CAOPC,kBAAkB,CAAlBA,kBAPO,CAFF,CAAD,CAAR,CAdJ,iFA2BIM,OAAO,CAACC,KAAR,cA3BJ,qEADA,oEADK","sourcesContent":["import { Dispatch } from \"redux\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\n// Actions and types\nimport { ContractAction } from \"../actions\";\nimport * as t from \"../types\";\n\n// Root state of the reducer\nimport { RootState } from \"../reducers\";\n\n// Utils\nimport {\n  kUSDAddress,\n  seedAddress,\n  boxFruitAddress,\n  boxPoolAddress,\n  boxFarmAddress,\n  kUSDFaucetAddress,\n  rpcNode,\n} from \"../../utils/global\";\n\nexport const loadContracts =\n  () =>\n  async (dispatch: Dispatch<ContractAction>, getState: () => RootState): Promise<void> => {\n    const walletInstance = getState().wallet.walletInstance as BeaconWallet;\n\n    const Tezos = new TezosToolkit(rpcNode);\n    Tezos.setWalletProvider(walletInstance);\n\n    try {\n      const kUSDContract = await Tezos.wallet.at(kUSDAddress);\n      const seedContract = await Tezos.wallet.at(seedAddress);\n      const boxFruitContract = await Tezos.wallet.at(boxFruitAddress);\n      const boxPoolContract = await Tezos.wallet.at(boxPoolAddress);\n      const boxFarmContract = await Tezos.wallet.at(boxFarmAddress);\n      const kUSDFaucetContract = await Tezos.wallet.at(kUSDFaucetAddress);\n\n      dispatch({\n        type: t.ContractActionTypes.LOAD_CONTRACTS,\n        payload: {\n          tezos: Tezos,\n          kUSDContract,\n          seedContract,\n          boxFruitContract,\n          boxPoolContract,\n          boxFarmContract,\n          kUSDFaucetContract,\n        },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}