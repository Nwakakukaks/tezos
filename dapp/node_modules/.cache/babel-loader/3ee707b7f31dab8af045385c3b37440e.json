{"ast":null,"code":"export const formatAddress = address => {\n  return `${address.slice(0, 7)}...${address.slice(-4)}`;\n};\nexport const formatTokenBalance = (balance, decimals) => {\n  return (parseFloat(balance) / 10 ** decimals).toFixed(2).replace(/[.,]00$/, \"\");\n};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/utils/strings.ts"],"names":["formatAddress","address","slice","formatTokenBalance","balance","decimals","parseFloat","toFixed","replace"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAA6B;AACxD,SAAQ,GAAEA,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAoB,MAAKD,OAAO,CAACC,KAAR,CAAc,CAAC,CAAf,CAAkB,EAArD;AACD,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAkBC,QAAlB,KAA+C;AAC/E,SAAO,CAACC,UAAU,CAACF,OAAD,CAAV,GAAsB,MAAMC,QAA7B,EAAuCE,OAAvC,CAA+C,CAA/C,EAAkDC,OAAlD,CAA0D,SAA1D,EAAqE,EAArE,CAAP;AACD,CAFM","sourcesContent":["export const formatAddress = (address: string): string => {\n  return `${address.slice(0, 7)}...${address.slice(-4)}`;\n};\n\nexport const formatTokenBalance = (balance: string, decimals: number): string => {\n  return (parseFloat(balance) / 10 ** decimals).toFixed(2).replace(/[.,]00$/, \"\");\n};\n"]},"metadata":{},"sourceType":"module"}