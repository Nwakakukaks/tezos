{"ast":null,"code":"import axios from \"axios\";\n// API\nimport { getFA12Balance, getFA12TotalSupply, getFA2TotalSupply } from \"../../api\"; // Utils\n\nimport { Fruits, kUSDAddress, seedAddress, boxFarmAddress, boxPoolAddress, boxFruitAddress, indexerAPI } from \"../../utils/global\"; // Types and actions\n\nimport * as t from \"../types\";\nexport const loadStats = () => async dispatch => {\n  try {\n    const seedSupply = await getFA12TotalSupply(seedAddress);\n    const seedsPlanted = await getFA12Balance(seedAddress, boxFarmAddress);\n    const kUSDLocked = await getFA12Balance(kUSDAddress, boxPoolAddress);\n    const elderGrape = await getFA2TotalSupply(boxFruitAddress, \"1\");\n    const mangrot = await getFA2TotalSupply(boxFruitAddress, \"2\");\n    const spotBerry = await getFA2TotalSupply(boxFruitAddress, \"3\");\n    const blueStripe = await getFA2TotalSupply(boxFruitAddress, \"4\");\n    const crownApple = await getFA2TotalSupply(boxFruitAddress, \"5\");\n    const {\n      data: {\n        numBoxes\n      }\n    } = await axios.get(`${indexerAPI}/boxes`);\n    dispatch({\n      type: t.StatsActionTypes.LOAD_STATS,\n      payload: {\n        seedSupply,\n        seedsPlanted,\n        kUSDLocked,\n        numBoxes,\n        fruitsHarvested: {\n          [Fruits.ELDER_GRAPE]: elderGrape,\n          [Fruits.MANGROT]: mangrot,\n          [Fruits.SPOT_BERRY]: spotBerry,\n          [Fruits.BLUE_STRIPE]: blueStripe,\n          [Fruits.CROWN_APPLE]: crownApple\n        }\n      }\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/action-creators/stats.ts"],"names":["axios","getFA12Balance","getFA12TotalSupply","getFA2TotalSupply","Fruits","kUSDAddress","seedAddress","boxFarmAddress","boxPoolAddress","boxFruitAddress","indexerAPI","t","loadStats","dispatch","seedSupply","seedsPlanted","kUSDLocked","elderGrape","mangrot","spotBerry","blueStripe","crownApple","data","numBoxes","get","type","StatsActionTypes","LOAD_STATS","payload","fruitsHarvested","ELDER_GRAPE","MANGROT","SPOT_BERRY","BLUE_STRIPE","CROWN_APPLE","err","console","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;AACA,SAASC,cAAT,EAAyBC,kBAAzB,EAA6CC,iBAA7C,QAAsE,WAAtE,C,CAEA;;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,UAPF,QAQO,oBARP,C,CAUA;;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAA2C;AACxE,MAAI;AACF,UAAMC,UAAU,GAAG,MAAMZ,kBAAkB,CAACI,WAAD,CAA3C;AACA,UAAMS,YAAY,GAAG,MAAMd,cAAc,CAACK,WAAD,EAAcC,cAAd,CAAzC;AACA,UAAMS,UAAU,GAAG,MAAMf,cAAc,CAACI,WAAD,EAAcG,cAAd,CAAvC;AAEA,UAAMS,UAAU,GAAG,MAAMd,iBAAiB,CAACM,eAAD,EAAkB,GAAlB,CAA1C;AACA,UAAMS,OAAO,GAAG,MAAMf,iBAAiB,CAACM,eAAD,EAAkB,GAAlB,CAAvC;AACA,UAAMU,SAAS,GAAG,MAAMhB,iBAAiB,CAACM,eAAD,EAAkB,GAAlB,CAAzC;AACA,UAAMW,UAAU,GAAG,MAAMjB,iBAAiB,CAACM,eAAD,EAAkB,GAAlB,CAA1C;AACA,UAAMY,UAAU,GAAG,MAAMlB,iBAAiB,CAACM,eAAD,EAAkB,GAAlB,CAA1C;AAEA,UAAM;AACJa,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEF,MAAMvB,KAAK,CAACwB,GAAN,CAAW,GAAEd,UAAW,QAAxB,CAFV;AAIAG,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEd,CAAC,CAACe,gBAAF,CAAmBC,UADlB;AAEPC,MAAAA,OAAO,EAAE;AACPd,QAAAA,UADO;AAEPC,QAAAA,YAFO;AAGPC,QAAAA,UAHO;AAIPO,QAAAA,QAJO;AAKPM,QAAAA,eAAe,EAAE;AACf,WAACzB,MAAM,CAAC0B,WAAR,GAAsBb,UADP;AAEf,WAACb,MAAM,CAAC2B,OAAR,GAAkBb,OAFH;AAGf,WAACd,MAAM,CAAC4B,UAAR,GAAqBb,SAHN;AAIf,WAACf,MAAM,CAAC6B,WAAR,GAAsBb,UAJP;AAKf,WAAChB,MAAM,CAAC8B,WAAR,GAAsBb;AALP;AALV;AAFF,KAAD,CAAR;AAgBD,GA/BD,CA+BE,OAAOc,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAnCM","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"react\";\n\n// API\nimport { getFA12Balance, getFA12TotalSupply, getFA2TotalSupply } from \"../../api\";\n\n// Utils\nimport {\n  Fruits,\n  kUSDAddress,\n  seedAddress,\n  boxFarmAddress,\n  boxPoolAddress,\n  boxFruitAddress,\n  indexerAPI,\n} from \"../../utils/global\";\n\n// Types and actions\nimport { StatsAction } from \"../actions\";\nimport * as t from \"../types\";\n\nexport const loadStats = () => async (dispatch: Dispatch<StatsAction>) => {\n  try {\n    const seedSupply = await getFA12TotalSupply(seedAddress);\n    const seedsPlanted = await getFA12Balance(seedAddress, boxFarmAddress);\n    const kUSDLocked = await getFA12Balance(kUSDAddress, boxPoolAddress);\n\n    const elderGrape = await getFA2TotalSupply(boxFruitAddress, \"1\");\n    const mangrot = await getFA2TotalSupply(boxFruitAddress, \"2\");\n    const spotBerry = await getFA2TotalSupply(boxFruitAddress, \"3\");\n    const blueStripe = await getFA2TotalSupply(boxFruitAddress, \"4\");\n    const crownApple = await getFA2TotalSupply(boxFruitAddress, \"5\");\n\n    const {\n      data: { numBoxes },\n    } = await axios.get(`${indexerAPI}/boxes`);\n\n    dispatch({\n      type: t.StatsActionTypes.LOAD_STATS,\n      payload: {\n        seedSupply,\n        seedsPlanted,\n        kUSDLocked,\n        numBoxes,\n        fruitsHarvested: {\n          [Fruits.ELDER_GRAPE]: elderGrape,\n          [Fruits.MANGROT]: mangrot,\n          [Fruits.SPOT_BERRY]: spotBerry,\n          [Fruits.BLUE_STRIPE]: blueStripe,\n          [Fruits.CROWN_APPLE]: crownApple,\n        },\n      },\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}