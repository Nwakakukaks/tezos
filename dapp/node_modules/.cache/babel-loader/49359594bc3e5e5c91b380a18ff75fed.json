{"ast":null,"code":"// Actions and types\nimport * as t from \"../types\";\nconst initialState = {\n  tezos: null,\n  kUSDContract: null,\n  seedContract: null,\n  boxFruitContract: null,\n  boxPoolContract: null,\n  boxFarmContract: null,\n  kUSDFaucetContract: null\n};\nexport const contractReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.ContractActionTypes.LOAD_CONTRACTS:\n      {\n        return { ...action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/reducers/contract.ts"],"names":["t","initialState","tezos","kUSDContract","seedContract","boxFruitContract","boxPoolContract","boxFarmContract","kUSDFaucetContract","contractReducer","state","action","type","ContractActionTypes","LOAD_CONTRACTS","payload"],"mappings":"AAGA;AAEA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;AAYA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE,IAD2B;AAElCC,EAAAA,YAAY,EAAE,IAFoB;AAGlCC,EAAAA,YAAY,EAAE,IAHoB;AAIlCC,EAAAA,gBAAgB,EAAE,IAJgB;AAKlCC,EAAAA,eAAe,EAAE,IALiB;AAMlCC,EAAAA,eAAe,EAAE,IANiB;AAOlCC,EAAAA,kBAAkB,EAAE;AAPc,CAApC;AAUA,OAAO,MAAMC,eAAuD,GAAG,YAGnD;AAAA,MAFlBC,KAEkB,uEAFVT,YAEU;AAAA,MADlBU,MACkB;;AAClB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,CAAC,CAACa,mBAAF,CAAsBC,cAA3B;AAA2C;AACzC,eAAO,EACL,GAAGH,MAAM,CAACI;AADL,SAAP;AAGD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AARH;AAUD,CAdM","sourcesContent":["import { Reducer } from \"redux\";\nimport { TezosToolkit, WalletContract } from \"@taquito/taquito\";\n\n// Actions and types\nimport { ContractAction } from \"../actions\";\nimport * as t from \"../types\";\n\ninterface ContractState {\n  tezos: TezosToolkit | null;\n  kUSDContract: WalletContract | null;\n  seedContract: WalletContract | null;\n  boxFruitContract: WalletContract | null;\n  boxPoolContract: WalletContract | null;\n  boxFarmContract: WalletContract | null;\n  kUSDFaucetContract: WalletContract | null;\n}\n\nconst initialState: ContractState = {\n  tezos: null,\n  kUSDContract: null,\n  seedContract: null,\n  boxFruitContract: null,\n  boxPoolContract: null,\n  boxFarmContract: null,\n  kUSDFaucetContract: null,\n};\n\nexport const contractReducer: Reducer<ContractState, ContractAction> = (\n  state = initialState,\n  action\n): ContractState => {\n  switch (action.type) {\n    case t.ContractActionTypes.LOAD_CONTRACTS: {\n      return {\n        ...action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}