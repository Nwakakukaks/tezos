{"ast":null,"code":"// Utils\nimport { Fruits } from \"../../utils/global\"; // Actions and types\n\nimport * as t from \"../types\";\nconst initialState = {\n  isConnected: false,\n  walletInstance: null,\n  accountPkh: \"\",\n  tokenBalances: {\n    kUSD: \"0\",\n    SEED: \"0\"\n  },\n  fruitBalances: {\n    [Fruits.ELDER_GRAPE]: \"0\",\n    [Fruits.MANGROT]: \"0\",\n    [Fruits.SPOT_BERRY]: \"0\",\n    [Fruits.BLUE_STRIPE]: \"0\",\n    [Fruits.CROWN_APPLE]: \"0\"\n  }\n};\nexport const walletReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.WalletActionTypes.CONNECT_WALLET:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    case t.WalletActionTypes.GET_BALANCES:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/reducers/wallet.ts"],"names":["Fruits","t","initialState","isConnected","walletInstance","accountPkh","tokenBalances","kUSD","SEED","fruitBalances","ELDER_GRAPE","MANGROT","SPOT_BERRY","BLUE_STRIPE","CROWN_APPLE","walletReducer","state","action","type","WalletActionTypes","CONNECT_WALLET","payload","GET_BALANCES"],"mappings":"AAGA;AACA,SAASA,MAAT,QAAuB,oBAAvB,C,CAEA;;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAeA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,WAAW,EAAE,KADmB;AAEhCC,EAAAA,cAAc,EAAE,IAFgB;AAGhCC,EAAAA,UAAU,EAAE,EAHoB;AAIhCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAE,GADO;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAJiB;AAQhCC,EAAAA,aAAa,EAAE;AACb,KAACT,MAAM,CAACU,WAAR,GAAsB,GADT;AAEb,KAACV,MAAM,CAACW,OAAR,GAAkB,GAFL;AAGb,KAACX,MAAM,CAACY,UAAR,GAAqB,GAHR;AAIb,KAACZ,MAAM,CAACa,WAAR,GAAsB,GAJT;AAKb,KAACb,MAAM,CAACc,WAAR,GAAsB;AALT;AARiB,CAAlC;AAiBA,OAAO,MAAMC,aAAiD,GAAG,YAA+C;AAAA,MAA9CC,KAA8C,uEAAtCd,YAAsC;AAAA,MAAxBe,MAAwB;;AAC9G,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,CAAC,CAACkB,iBAAF,CAAoBC,cAAzB;AAAyC;AACvC,eAAO,EACL,GAAGJ,KADE;AAEL,aAAGC,MAAM,CAACI;AAFL,SAAP;AAID;;AACD,SAAKpB,CAAC,CAACkB,iBAAF,CAAoBG,YAAzB;AAAuC;AACrC,eAAO,EACL,GAAGN,KADE;AAEL,aAAGC,MAAM,CAACI;AAFL,SAAP;AAID;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAfH;AAiBD,CAlBM","sourcesContent":["import { Reducer } from \"redux\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\n// Utils\nimport { Fruits } from \"../../utils/global\";\n\n// Actions and types\nimport { WalletAction } from \"../actions\";\nimport * as t from \"../types\";\n\ninterface WalletState {\n  isConnected: boolean;\n  walletInstance: BeaconWallet | null;\n  accountPkh: string;\n  tokenBalances: {\n    kUSD: string;\n    SEED: string;\n  };\n  fruitBalances: {\n    [key in keyof typeof Fruits]: string;\n  };\n}\n\nconst initialState: WalletState = {\n  isConnected: false,\n  walletInstance: null,\n  accountPkh: \"\",\n  tokenBalances: {\n    kUSD: \"0\",\n    SEED: \"0\",\n  },\n  fruitBalances: {\n    [Fruits.ELDER_GRAPE]: \"0\",\n    [Fruits.MANGROT]: \"0\",\n    [Fruits.SPOT_BERRY]: \"0\",\n    [Fruits.BLUE_STRIPE]: \"0\",\n    [Fruits.CROWN_APPLE]: \"0\",\n  },\n};\n\nexport const walletReducer: Reducer<WalletState, WalletAction> = (state = initialState, action): WalletState => {\n  switch (action.type) {\n    case t.WalletActionTypes.CONNECT_WALLET: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case t.WalletActionTypes.GET_BALANCES: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}