{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";// API\nimport{getFA12Balance,getFA12TotalSupply,getFA2TotalSupply}from\"../../api\";// Utils\nimport{Fruits,kUSDAddress,seedAddress,boxFarmAddress,boxPoolAddress,boxFruitAddress,indexerAPI}from\"../../utils/global\";// Types and actions\nimport*as t from\"../types\";export var loadStats=function loadStats(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _fruitsHarvested,seedSupply,seedsPlanted,kUSDLocked,elderGrape,mangrot,spotBerry,blueStripe,crownApple,_yield$axios$get,numBoxes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getFA12TotalSupply(seedAddress);case 3:seedSupply=_context.sent;_context.next=6;return getFA12Balance(seedAddress,boxFarmAddress);case 6:seedsPlanted=_context.sent;_context.next=9;return getFA12Balance(kUSDAddress,boxPoolAddress);case 9:kUSDLocked=_context.sent;_context.next=12;return getFA2TotalSupply(boxFruitAddress,\"1\");case 12:elderGrape=_context.sent;_context.next=15;return getFA2TotalSupply(boxFruitAddress,\"2\");case 15:mangrot=_context.sent;_context.next=18;return getFA2TotalSupply(boxFruitAddress,\"3\");case 18:spotBerry=_context.sent;_context.next=21;return getFA2TotalSupply(boxFruitAddress,\"4\");case 21:blueStripe=_context.sent;_context.next=24;return getFA2TotalSupply(boxFruitAddress,\"5\");case 24:crownApple=_context.sent;_context.next=27;return axios.get(\"\".concat(indexerAPI,\"/boxes\"));case 27:_yield$axios$get=_context.sent;numBoxes=_yield$axios$get.data.numBoxes;dispatch({type:t.StatsActionTypes.LOAD_STATS,payload:{seedSupply:seedSupply,seedsPlanted:seedsPlanted,kUSDLocked:kUSDLocked,numBoxes:numBoxes,fruitsHarvested:(_fruitsHarvested={},_defineProperty(_fruitsHarvested,Fruits.ELDER_GRAPE,elderGrape),_defineProperty(_fruitsHarvested,Fruits.MANGROT,mangrot),_defineProperty(_fruitsHarvested,Fruits.SPOT_BERRY,spotBerry),_defineProperty(_fruitsHarvested,Fruits.BLUE_STRIPE,blueStripe),_defineProperty(_fruitsHarvested,Fruits.CROWN_APPLE,crownApple),_fruitsHarvested)}});_context.next=35;break;case 32:_context.prev=32;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 35:case\"end\":return _context.stop();}}},_callee,null,[[0,32]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/action-creators/stats.ts"],"names":["axios","getFA12Balance","getFA12TotalSupply","getFA2TotalSupply","Fruits","kUSDAddress","seedAddress","boxFarmAddress","boxPoolAddress","boxFruitAddress","indexerAPI","t","loadStats","dispatch","seedSupply","seedsPlanted","kUSDLocked","elderGrape","mangrot","spotBerry","blueStripe","crownApple","get","numBoxes","data","type","StatsActionTypes","LOAD_STATS","payload","fruitsHarvested","ELDER_GRAPE","MANGROT","SPOT_BERRY","BLUE_STRIPE","CROWN_APPLE","console","error"],"mappings":"4aAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA;AACA,OAASC,cAAT,CAAyBC,kBAAzB,CAA6CC,iBAA7C,KAAsE,WAAtE,CAEA;AACA,OACEC,MADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,cAJF,CAKEC,cALF,CAMEC,eANF,CAOEC,UAPF,KAQO,oBARP,CAUA;AAEA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,UAAnB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,kGAAM,iBAAOC,QAAP,6RAEFX,CAAAA,kBAAkB,CAACI,WAAD,CAFhB,QAErBQ,UAFqB,qCAGAb,CAAAA,cAAc,CAACK,WAAD,CAAcC,cAAd,CAHd,QAGrBQ,YAHqB,qCAIFd,CAAAA,cAAc,CAACI,WAAD,CAAcG,cAAd,CAJZ,QAIrBQ,UAJqB,sCAMFb,CAAAA,iBAAiB,CAACM,eAAD,CAAkB,GAAlB,CANf,SAMrBQ,UANqB,sCAOLd,CAAAA,iBAAiB,CAACM,eAAD,CAAkB,GAAlB,CAPZ,SAOrBS,OAPqB,sCAQHf,CAAAA,iBAAiB,CAACM,eAAD,CAAkB,GAAlB,CARd,SAQrBU,SARqB,sCASFhB,CAAAA,iBAAiB,CAACM,eAAD,CAAkB,GAAlB,CATf,SASrBW,UATqB,sCAUFjB,CAAAA,iBAAiB,CAACM,eAAD,CAAkB,GAAlB,CAVf,SAUrBY,UAVqB,sCAcjBrB,CAAAA,KAAK,CAACsB,GAAN,WAAaZ,UAAb,WAdiB,wCAajBa,QAbiB,kBAazBC,IAbyB,CAajBD,QAbiB,CAgB3BV,QAAQ,CAAC,CACPY,IAAI,CAAEd,CAAC,CAACe,gBAAF,CAAmBC,UADlB,CAEPC,OAAO,CAAE,CACPd,UAAU,CAAVA,UADO,CAEPC,YAAY,CAAZA,YAFO,CAGPC,UAAU,CAAVA,UAHO,CAIPO,QAAQ,CAARA,QAJO,CAKPM,eAAe,uDACZzB,MAAM,CAAC0B,WADK,CACSb,UADT,mCAEZb,MAAM,CAAC2B,OAFK,CAEKb,OAFL,mCAGZd,MAAM,CAAC4B,UAHK,CAGQb,SAHR,mCAIZf,MAAM,CAAC6B,WAJK,CAISb,UAJT,mCAKZhB,MAAM,CAAC8B,WALK,CAKSb,UALT,mBALR,CAFF,CAAD,CAAR,CAhB2B,iFAiC3Bc,OAAO,CAACC,KAAR,cAjC2B,qEAAN,gEAAlB","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"react\";\n\n// API\nimport { getFA12Balance, getFA12TotalSupply, getFA2TotalSupply } from \"../../api\";\n\n// Utils\nimport {\n  Fruits,\n  kUSDAddress,\n  seedAddress,\n  boxFarmAddress,\n  boxPoolAddress,\n  boxFruitAddress,\n  indexerAPI,\n} from \"../../utils/global\";\n\n// Types and actions\nimport { StatsAction } from \"../actions\";\nimport * as t from \"../types\";\n\nexport const loadStats = () => async (dispatch: Dispatch<StatsAction>) => {\n  try {\n    const seedSupply = await getFA12TotalSupply(seedAddress);\n    const seedsPlanted = await getFA12Balance(seedAddress, boxFarmAddress);\n    const kUSDLocked = await getFA12Balance(kUSDAddress, boxPoolAddress);\n\n    const elderGrape = await getFA2TotalSupply(boxFruitAddress, \"1\");\n    const mangrot = await getFA2TotalSupply(boxFruitAddress, \"2\");\n    const spotBerry = await getFA2TotalSupply(boxFruitAddress, \"3\");\n    const blueStripe = await getFA2TotalSupply(boxFruitAddress, \"4\");\n    const crownApple = await getFA2TotalSupply(boxFruitAddress, \"5\");\n\n    const {\n      data: { numBoxes },\n    } = await axios.get(`${indexerAPI}/boxes`);\n\n    dispatch({\n      type: t.StatsActionTypes.LOAD_STATS,\n      payload: {\n        seedSupply,\n        seedsPlanted,\n        kUSDLocked,\n        numBoxes,\n        fruitsHarvested: {\n          [Fruits.ELDER_GRAPE]: elderGrape,\n          [Fruits.MANGROT]: mangrot,\n          [Fruits.SPOT_BERRY]: spotBerry,\n          [Fruits.BLUE_STRIPE]: blueStripe,\n          [Fruits.CROWN_APPLE]: crownApple,\n        },\n      },\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}