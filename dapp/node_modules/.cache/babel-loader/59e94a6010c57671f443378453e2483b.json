{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{OpKind}from\"@taquito/taquito\";import BigNumber from\"bignumber.js\";// Utils\nimport{boxFarmAddress,seedAddress,seedsPerBox}from\"../utils/global\";import{multiply}from\"../utils/math\";// API\nimport{getFA12Approval}from\"../api\";// Redux store\nimport{store}from\"..\";export var plantSeeds=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(boxes){var accountPkh,_store$getState$contr,boxFarmContract,seedContract,tezos,opList,seedRequired,hasApproved,approvalAmount,batch;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:accountPkh=store.getState().wallet.accountPkh;_store$getState$contr=store.getState().contract,boxFarmContract=_store$getState$contr.boxFarmContract,seedContract=_store$getState$contr.seedContract,tezos=_store$getState$contr.tezos;if(!(!boxFarmContract||!seedContract||!tezos)){_context.next=4;break;}return _context.abrupt(\"return\");case 4:opList=[];seedRequired=multiply(boxes*seedsPerBox,Math.pow(10,18));hasApproved=false;_context.prev=7;_context.next=10;return getFA12Approval(seedAddress,accountPkh,boxFarmAddress);case 10:approvalAmount=_context.sent;if(new BigNumber(approvalAmount).isLessThan(seedRequired)){opList.push(_objectSpread({kind:OpKind.TRANSACTION},seedContract.methods.approve(boxFarmAddress,seedRequired.toString()).toTransferParams()));hasApproved=true;}// Main operation\nopList.push(_objectSpread({kind:OpKind.TRANSACTION},boxFarmContract.methods.plant_seeds(boxes).toTransferParams()));// Revoke approval\nif(hasApproved){opList.push(_objectSpread({kind:OpKind.TRANSACTION},seedContract.methods.approve(boxFarmAddress,0).toTransferParams()));}// Return operation instance\n_context.next=16;return tezos.wallet.batch(opList);case 16:batch=_context.sent;return _context.abrupt(\"return\",batch);case 20:_context.prev=20;_context.t0=_context[\"catch\"](7);throw _context.t0;case 23:case\"end\":return _context.stop();}}},_callee,null,[[7,20]]);}));return function plantSeeds(_x){return _ref.apply(this,arguments);};}();export var waterPlants=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(boxes){var boxFarmContract,op;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:boxFarmContract=store.getState().contract.boxFarmContract;if(boxFarmContract){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:_context2.prev=3;_context2.next=6;return boxFarmContract.methods.water_plants(boxes);case 6:op=_context2.sent;return _context2.abrupt(\"return\",op);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](3);throw _context2.t0;case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[3,10]]);}));return function waterPlants(_x2){return _ref2.apply(this,arguments);};}();export var harvest=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(boxId){var boxFarmContract,op;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:boxFarmContract=store.getState().contract.boxFarmContract;if(boxFarmContract){_context3.next=3;break;}return _context3.abrupt(\"return\");case 3:_context3.prev=3;_context3.next=6;return boxFarmContract.methods.harvest(boxId);case 6:op=_context3.sent;return _context3.abrupt(\"return\",op);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](3);throw _context3.t0;case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[3,10]]);}));return function harvest(_x3){return _ref3.apply(this,arguments);};}();export var deseed=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tokenId,amount){var boxFarmContract,op;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:boxFarmContract=store.getState().contract.boxFarmContract;if(boxFarmContract){_context4.next=3;break;}return _context4.abrupt(\"return\");case 3:_context4.prev=3;_context4.next=6;return boxFarmContract.methods.deseed([{token_id:tokenId,amount:amount}]);case 6:op=_context4.sent;return _context4.abrupt(\"return\",op);case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](3);throw _context4.t0;case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[3,10]]);}));return function deseed(_x4,_x5){return _ref4.apply(this,arguments);};}();export var merge=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(tokenId){var boxFarmContract,op;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:boxFarmContract=store.getState().contract.boxFarmContract;if(boxFarmContract){_context5.next=3;break;}return _context5.abrupt(\"return\");case 3:_context5.prev=3;_context5.next=6;return boxFarmContract.methods.merge(tokenId);case 6:op=_context5.sent;return _context5.abrupt(\"return\",op);case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](3);throw _context5.t0;case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[3,10]]);}));return function merge(_x6){return _ref5.apply(this,arguments);};}();","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/operations/farm.ts"],"names":["OpKind","BigNumber","boxFarmAddress","seedAddress","seedsPerBox","multiply","getFA12Approval","store","plantSeeds","boxes","accountPkh","getState","wallet","contract","boxFarmContract","seedContract","tezos","opList","seedRequired","hasApproved","approvalAmount","isLessThan","push","kind","TRANSACTION","methods","approve","toString","toTransferParams","plant_seeds","batch","waterPlants","water_plants","op","harvest","boxId","deseed","tokenId","amount","token_id","merge"],"mappings":"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","sourcesContent":["import { WalletParamsWithKind, OpKind, WalletOperationBatch, ContractMethod, Wallet } from \"@taquito/taquito\";\nimport BigNumber from \"bignumber.js\";\n\n// Utils\nimport { boxFarmAddress, seedAddress, seedsPerBox } from \"../utils/global\";\nimport { multiply } from \"../utils/math\";\n\n// API\nimport { getFA12Approval } from \"../api\";\n\n// Redux store\nimport { store } from \"..\";\n\nexport const plantSeeds = async (boxes: number): Promise<WalletOperationBatch | undefined> => {\n  const { accountPkh } = store.getState().wallet;\n  const { boxFarmContract, seedContract, tezos } = store.getState().contract;\n\n  if (!boxFarmContract || !seedContract || !tezos) return;\n\n  const opList: WalletParamsWithKind[] = [];\n\n  const seedRequired = multiply(boxes * seedsPerBox, 10 ** 18);\n\n  let hasApproved = false;\n\n  try {\n    // Check for approval value\n    const approvalAmount = await getFA12Approval(seedAddress, accountPkh, boxFarmAddress);\n    if (new BigNumber(approvalAmount).isLessThan(seedRequired)) {\n      opList.push({\n        kind: OpKind.TRANSACTION,\n        ...seedContract.methods.approve(boxFarmAddress, seedRequired.toString()).toTransferParams(),\n      });\n      hasApproved = true;\n    }\n\n    // Main operation\n    opList.push({\n      kind: OpKind.TRANSACTION,\n      ...boxFarmContract.methods.plant_seeds(boxes).toTransferParams(),\n    });\n\n    // Revoke approval\n    if (hasApproved) {\n      opList.push({\n        kind: OpKind.TRANSACTION,\n        ...seedContract.methods.approve(boxFarmAddress, 0).toTransferParams(),\n      });\n    }\n\n    // Return operation instance\n    const batch = await tezos.wallet.batch(opList);\n    return batch;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const waterPlants = async (boxes: number[]): Promise<ContractMethod<Wallet> | undefined> => {\n  const { boxFarmContract } = store.getState().contract;\n\n  if (!boxFarmContract) return;\n\n  try {\n    const op = await boxFarmContract.methods.water_plants(boxes);\n    return op;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const harvest = async (boxId: number): Promise<ContractMethod<Wallet> | undefined> => {\n  const { boxFarmContract } = store.getState().contract;\n\n  if (!boxFarmContract) return;\n\n  try {\n    const op = await boxFarmContract.methods.harvest(boxId);\n    return op;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const deseed = async (tokenId: number, amount: number): Promise<ContractMethod<Wallet> | undefined> => {\n  const { boxFarmContract } = store.getState().contract;\n\n  if (!boxFarmContract) return;\n\n  try {\n    const op = await boxFarmContract.methods.deseed([{ token_id: tokenId, amount }]);\n    return op;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const merge = async (tokenId: number): Promise<ContractMethod<Wallet> | undefined> => {\n  const { boxFarmContract } = store.getState().contract;\n\n  if (!boxFarmContract) return;\n\n  try {\n    const op = await boxFarmContract.methods.merge(tokenId);\n    return op;\n  } catch (err) {\n    throw err;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}