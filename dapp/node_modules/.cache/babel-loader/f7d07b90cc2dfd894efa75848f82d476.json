{"ast":null,"code":"import _objectSpread from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/workspace/box-defi/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _fruitBalances;// Utils\nimport{Fruits}from\"../../utils/global\";// Actions and types\nimport*as t from\"../types\";var initialState={isConnected:false,walletInstance:null,accountPkh:\"\",tokenBalances:{kUSD:\"0\",SEED:\"0\"},fruitBalances:(_fruitBalances={},_defineProperty(_fruitBalances,Fruits.ELDER_GRAPE,\"0\"),_defineProperty(_fruitBalances,Fruits.MANGROT,\"0\"),_defineProperty(_fruitBalances,Fruits.SPOT_BERRY,\"0\"),_defineProperty(_fruitBalances,Fruits.BLUE_STRIPE,\"0\"),_defineProperty(_fruitBalances,Fruits.CROWN_APPLE,\"0\"),_fruitBalances)};export var walletReducer=function walletReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case t.WalletActionTypes.CONNECT_WALLET:{return _objectSpread(_objectSpread({},state),action.payload);}case t.WalletActionTypes.GET_BALANCES:{return _objectSpread(_objectSpread({},state),action.payload);}default:{return state;}}};","map":{"version":3,"sources":["/workspace/box-defi/dapp/src/redux/reducers/wallet.ts"],"names":["Fruits","t","initialState","isConnected","walletInstance","accountPkh","tokenBalances","kUSD","SEED","fruitBalances","ELDER_GRAPE","MANGROT","SPOT_BERRY","BLUE_STRIPE","CROWN_APPLE","walletReducer","state","action","type","WalletActionTypes","CONNECT_WALLET","payload","GET_BALANCES"],"mappings":"kTAGA;AACA,OAASA,MAAT,KAAuB,oBAAvB,CAEA;AAEA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,UAAnB,CAeA,GAAMC,CAAAA,YAAyB,CAAG,CAChCC,WAAW,CAAE,KADmB,CAEhCC,cAAc,CAAE,IAFgB,CAGhCC,UAAU,CAAE,EAHoB,CAIhCC,aAAa,CAAE,CACbC,IAAI,CAAE,GADO,CAEbC,IAAI,CAAE,GAFO,CAJiB,CAQhCC,aAAa,mDACVT,MAAM,CAACU,WADG,CACW,GADX,iCAEVV,MAAM,CAACW,OAFG,CAEO,GAFP,iCAGVX,MAAM,CAACY,UAHG,CAGU,GAHV,iCAIVZ,MAAM,CAACa,WAJG,CAIW,GAJX,iCAKVb,MAAM,CAACc,WALG,CAKW,GALX,iBARmB,CAAlC,CAiBA,MAAO,IAAMC,CAAAA,aAAiD,CAAG,QAApDA,CAAAA,aAAoD,EAA+C,IAA9CC,CAAAA,KAA8C,2DAAtCd,YAAsC,IAAxBe,CAAAA,MAAwB,2CAC9G,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKjB,CAAAA,CAAC,CAACkB,iBAAF,CAAoBC,cAAzB,CAAyC,CACvC,sCACKJ,KADL,EAEKC,MAAM,CAACI,OAFZ,EAID,CACD,IAAKpB,CAAAA,CAAC,CAACkB,iBAAF,CAAoBG,YAAzB,CAAuC,CACrC,sCACKN,KADL,EAEKC,MAAM,CAACI,OAFZ,EAID,CACD,QAAS,CACP,MAAOL,CAAAA,KAAP,CACD,CAfH,CAiBD,CAlBM","sourcesContent":["import { Reducer } from \"redux\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\n// Utils\nimport { Fruits } from \"../../utils/global\";\n\n// Actions and types\nimport { WalletAction } from \"../actions\";\nimport * as t from \"../types\";\n\ninterface WalletState {\n  isConnected: boolean;\n  walletInstance: BeaconWallet | null;\n  accountPkh: string;\n  tokenBalances: {\n    kUSD: string;\n    SEED: string;\n  };\n  fruitBalances: {\n    [key in keyof typeof Fruits]: string;\n  };\n}\n\nconst initialState: WalletState = {\n  isConnected: false,\n  walletInstance: null,\n  accountPkh: \"\",\n  tokenBalances: {\n    kUSD: \"0\",\n    SEED: \"0\",\n  },\n  fruitBalances: {\n    [Fruits.ELDER_GRAPE]: \"0\",\n    [Fruits.MANGROT]: \"0\",\n    [Fruits.SPOT_BERRY]: \"0\",\n    [Fruits.BLUE_STRIPE]: \"0\",\n    [Fruits.CROWN_APPLE]: \"0\",\n  },\n};\n\nexport const walletReducer: Reducer<WalletState, WalletAction> = (state = initialState, action): WalletState => {\n  switch (action.type) {\n    case t.WalletActionTypes.CONNECT_WALLET: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case t.WalletActionTypes.GET_BALANCES: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}